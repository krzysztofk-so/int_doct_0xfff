name: CI


## I will be triggered on psuh to main or PR
   on:
     push:
       branches:
         - main
     pull_request:
       branches:
         - main

   jobs:
     build:
       runs-on: ubuntu-latest
       services:
         docker:
           image: docker:20.10.7-dind
           options: --privileged
           ## We ned to specify either port or socket for docker to communicate inside docker.
           volumes:
             - /var/run/docker.sock:/var/run/docker.sock:ro
       steps:
         - name: Checkout code
           uses: actions/checkout@v2

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v2

         - name: Build Docker image
           run: |
             docker build -t sample-java-app:latest .
             docker images
        
         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: us-east-1

         - name: Log in to Amazon ECR
           id: login-ecr
           uses: aws-actions/amazon-ecr-login@v1

         - name: Build, tag, and push image to ECR
           env:
             ECR_REPOSITORY: sample-java-app
             IMAGE_TAG: latest
           run: |
             docker tag sample-java-app:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
             docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

         # Here we can upload the artifiact that can be generated
         - name: Upload JAR artifact
  	       uses: actions/upload-artifact@v2
  	       with:
    		     name: sample-java-app
    		     path: target/sample-java-app-1.0-SNAPSHOT.jar

     test:
       runs-on: ubuntu-latest
       needs: build
       services:
         docker:
           image: docker:20.10.7-dind
           options: --privileged
       steps:
         - name: Checkout code
           uses: actions/checkout@v2

         - name: Run Docker container
           run: |
             docker run --rm sample-java-app:latest
